{"ast":null,"code":"import _objectSpread from\"/home/mateusn/web_dev_projects/pokedex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _objectWithoutProperties from\"/home/mateusn/web_dev_projects/pokedex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";var _excluded=[\"redirect\"],_excluded2=[\"redirect\"];import{useContext}from\"react\";import{BrowserRouter as Router,Switch,Route,Redirect}from\"react-router-dom\";import UserContext,{UserProvider}from\"./contexts/UserContext\";import{PokemonsProvider}from\"./contexts/PokemonsContext\";import Login from\"./pages/Login\";import SignUp from\"./pages/SignUp\";import PokemonList from\"./pages/PokemonList\";import Pokemon from\"./pages/Pokemon\";import MyPokemons from\"./pages/MyPokemons\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";export default function App(){return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(UserProvider,{children:/*#__PURE__*/_jsx(PokemonsProvider,{children:/*#__PURE__*/_jsx(Router,{children:/*#__PURE__*/_jsxs(Switch,{children:[/*#__PURE__*/_jsx(UnprotectedRoute,{path:\"/login\",exact:true,children:/*#__PURE__*/_jsx(Login,{})}),/*#__PURE__*/_jsx(UnprotectedRoute,{path:\"/sign-up\",exact:true,children:/*#__PURE__*/_jsx(SignUp,{})}),/*#__PURE__*/_jsx(ProtectedRoute,{path:\"/pokemon/:id\",exact:true,children:/*#__PURE__*/_jsx(Pokemon,{})}),/*#__PURE__*/_jsx(ProtectedRoute,{path:\"/\",exact:true,children:/*#__PURE__*/_jsx(PokemonList,{})}),/*#__PURE__*/_jsx(ProtectedRoute,{path:\"/my-pokemons\",exact:true,children:/*#__PURE__*/_jsx(MyPokemons,{})})]})})})})});}function ProtectedRoute(_ref){var _ref$redirect=_ref.redirect,redirect=_ref$redirect===void 0?\"/login\":_ref$redirect,props=_objectWithoutProperties(_ref,_excluded);var _useContext=useContext(UserContext),token=_useContext.token;if(!token){return/*#__PURE__*/_jsx(Redirect,{to:redirect});}return/*#__PURE__*/_jsx(Route,_objectSpread({},props));}function UnprotectedRoute(_ref2){var _ref2$redirect=_ref2.redirect,redirect=_ref2$redirect===void 0?\"/\":_ref2$redirect,props=_objectWithoutProperties(_ref2,_excluded2);var _useContext2=useContext(UserContext),token=_useContext2.token;if(token){return/*#__PURE__*/_jsx(Redirect,{to:redirect});}return/*#__PURE__*/_jsx(Route,_objectSpread({},props));}","map":{"version":3,"sources":["/home/mateusn/web_dev_projects/pokedex/src/App.js"],"names":["useContext","BrowserRouter","Router","Switch","Route","Redirect","UserContext","UserProvider","PokemonsProvider","Login","SignUp","PokemonList","Pokemon","MyPokemons","App","ProtectedRoute","redirect","props","token","UnprotectedRoute"],"mappings":"gYAAA,OAASA,UAAT,KAA2B,OAA3B,CACA,OACIC,aAAa,GAAIC,CAAAA,MADrB,CAEIC,MAFJ,CAGIC,KAHJ,CAIIC,QAJJ,KAKO,kBALP,CAOA,MAAOC,CAAAA,WAAP,EAAsBC,YAAtB,KAA0C,wBAA1C,CACA,OAASC,gBAAT,KAAiC,4BAAjC,CAEA,MAAOC,CAAAA,KAAP,KAAkB,eAAlB,CACA,MAAOC,CAAAA,MAAP,KAAmB,gBAAnB,CACA,MAAOC,CAAAA,WAAP,KAAwB,qBAAxB,CACA,MAAOC,CAAAA,OAAP,KAAoB,iBAApB,CACA,MAAOC,CAAAA,UAAP,KAAuB,oBAAvB,C,6IAEA,cAAe,SAASC,CAAAA,GAAT,EAAe,CAC1B,mBACI,sCACI,KAAC,YAAD,wBACI,KAAC,gBAAD,wBACI,KAAC,MAAD,wBACI,MAAC,MAAD,yBACI,KAAC,gBAAD,EAAkB,IAAI,CAAC,QAAvB,CAAgC,KAAK,KAArC,uBACI,KAAC,KAAD,IADJ,EADJ,cAKI,KAAC,gBAAD,EAAkB,IAAI,CAAC,UAAvB,CAAkC,KAAK,KAAvC,uBACI,KAAC,MAAD,IADJ,EALJ,cASI,KAAC,cAAD,EAAgB,IAAI,CAAC,cAArB,CAAoC,KAAK,KAAzC,uBACI,KAAC,OAAD,IADJ,EATJ,cAaI,KAAC,cAAD,EAAgB,IAAI,CAAC,GAArB,CAAyB,KAAK,KAA9B,uBACI,KAAC,WAAD,IADJ,EAbJ,cAiBI,KAAC,cAAD,EAAgB,IAAI,CAAC,cAArB,CAAoC,KAAK,KAAzC,uBACI,KAAC,UAAD,IADJ,EAjBJ,GADJ,EADJ,EADJ,EADJ,EADJ,CA+BH,CAED,QAASC,CAAAA,cAAT,MAAyD,wBAA/BC,QAA+B,CAA/BA,QAA+B,wBAAtB,QAAsB,eAATC,KAAS,0CACrD,gBAAkBjB,UAAU,CAACM,WAAD,CAA5B,CAAQY,KAAR,aAAQA,KAAR,CAEA,GAAI,CAACA,KAAL,CAAY,CACR,mBACI,KAAC,QAAD,EAAU,EAAE,CAAEF,QAAd,EADJ,CAGH,CAED,mBACI,KAAC,KAAD,kBAAWC,KAAX,EADJ,CAGH,CAED,QAASE,CAAAA,gBAAT,OAAsD,0BAA1BH,QAA0B,CAA1BA,QAA0B,yBAAjB,GAAiB,gBAATC,KAAS,4CAClD,iBAAkBjB,UAAU,CAACM,WAAD,CAA5B,CAAQY,KAAR,cAAQA,KAAR,CAEA,GAAIA,KAAJ,CAAW,CACP,mBACI,KAAC,QAAD,EAAU,EAAE,CAAEF,QAAd,EADJ,CAGH,CAED,mBACI,KAAC,KAAD,kBAAWC,KAAX,EADJ,CAGH","sourcesContent":["import { useContext } from \"react\";\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Redirect\n} from \"react-router-dom\";\n\nimport UserContext, { UserProvider } from \"./contexts/UserContext\";\nimport { PokemonsProvider } from \"./contexts/PokemonsContext\";\n\nimport Login from \"./pages/Login\";\nimport SignUp from \"./pages/SignUp\";\nimport PokemonList from \"./pages/PokemonList\";\nimport Pokemon from \"./pages/Pokemon\";\nimport MyPokemons from \"./pages/MyPokemons\";\n\nexport default function App() {\n    return (\n        <>\n            <UserProvider>\n                <PokemonsProvider>\n                    <Router>\n                        <Switch>\n                            <UnprotectedRoute path=\"/login\" exact>\n                                <Login />\n                            </UnprotectedRoute>\n\n                            <UnprotectedRoute path=\"/sign-up\" exact>\n                                <SignUp />\n                            </UnprotectedRoute>\n\n                            <ProtectedRoute path=\"/pokemon/:id\" exact>\n                                <Pokemon />\n                            </ProtectedRoute>\n\n                            <ProtectedRoute path=\"/\" exact>\n                                <PokemonList />\n                            </ProtectedRoute>\n\n                            <ProtectedRoute path=\"/my-pokemons\" exact>\n                                <MyPokemons />\n                            </ProtectedRoute>\n                        </Switch>\n                    </Router>\n                </PokemonsProvider>\n            </UserProvider>\n        </>\n    );\n}\n\nfunction ProtectedRoute({ redirect=\"/login\", ...props }) {\n    const { token } = useContext(UserContext);\n    \n    if (!token) {\n        return (\n            <Redirect to={redirect} />\n        );\n    }\n\n    return (\n        <Route {...props} />\n    );\n}\n\nfunction UnprotectedRoute({ redirect=\"/\", ...props }) {\n    const { token } = useContext(UserContext);\n    \n    if (token) {\n        return (\n            <Redirect to={redirect} />\n        );\n    }\n\n    return (\n        <Route {...props} />\n    );\n}\n"]},"metadata":{},"sourceType":"module"}