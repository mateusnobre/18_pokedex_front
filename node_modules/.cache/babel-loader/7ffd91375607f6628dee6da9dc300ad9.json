{"ast":null,"code":"import _slicedToArray from\"/home/mateusn/web_dev_projects/pokedex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useEffect,useState,createContext,useContext}from\"react\";import axios from\"axios\";import UserContext from\"../contexts/UserContext\";import{jsx as _jsx}from\"react/jsx-runtime\";var PokemonsContext=/*#__PURE__*/createContext();export default PokemonsContext;export function PokemonsProvider(_ref){var children=_ref.children;var _useContext=useContext(UserContext),token=_useContext.token;var _useState=useState(null),_useState2=_slicedToArray(_useState,2),pokemons=_useState2[0],setPokemons=_useState2[1];useEffect(function(){updatePokemons();},[token===null||token===void 0?void 0:token.token]);function updatePokemons(){axios.get(\"\".concat(process.env.REACT_APP_API_BASE_URL,\"/pokemons\"),{headers:{Authorization:\"Bearer \".concat(token===null||token===void 0?void 0:token.token)}}).then(function(response){setPokemons(response.data);});}return/*#__PURE__*/_jsx(PokemonsContext.Provider,{value:{pokemons:pokemons,updatePokemons:updatePokemons},children:children});}","map":{"version":3,"sources":["/home/mateusn/web_dev_projects/pokedex/src/contexts/PokemonsContext.js"],"names":["useEffect","useState","createContext","useContext","axios","UserContext","PokemonsContext","PokemonsProvider","children","token","pokemons","setPokemons","updatePokemons","get","process","env","REACT_APP_API_BASE_URL","headers","Authorization","then","response","data"],"mappings":"6JAAA,OAASA,SAAT,CAAoBC,QAApB,CAA8BC,aAA9B,CAA6CC,UAA7C,KAA+D,OAA/D,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CAEA,MAAOC,CAAAA,WAAP,KAAwB,yBAAxB,C,2CAEA,GAAMC,CAAAA,eAAe,cAAGJ,aAAa,EAArC,CACA,cAAeI,CAAAA,eAAf,CAEA,MAAO,SAASC,CAAAA,gBAAT,MAAwC,IAAZC,CAAAA,QAAY,MAAZA,QAAY,CAC3C,gBAAkBL,UAAU,CAACE,WAAD,CAA5B,CAAQI,KAAR,aAAQA,KAAR,CACA,cAAgCR,QAAQ,CAAC,IAAD,CAAxC,wCAAOS,QAAP,eAAiBC,WAAjB,eAEAX,SAAS,CAAC,UAAM,CACZY,cAAc,GACjB,CAFQ,CAEN,CAACH,KAAD,SAACA,KAAD,iBAACA,KAAK,CAAEA,KAAR,CAFM,CAAT,CAIA,QAASG,CAAAA,cAAT,EAA0B,CACtBR,KAAK,CAACS,GAAN,WAAaC,OAAO,CAACC,GAAR,CAAYC,sBAAzB,cAA4D,CACxDC,OAAO,CAAE,CACLC,aAAa,kBAAYT,KAAZ,SAAYA,KAAZ,iBAAYA,KAAK,CAAEA,KAAnB,CADR,CAD+C,CAA5D,EAIGU,IAJH,CAIQ,SAAAC,QAAQ,CAAI,CAChBT,WAAW,CAACS,QAAQ,CAACC,IAAV,CAAX,CACH,CAND,EAOH,CAED,mBACI,KAAC,eAAD,CAAiB,QAAjB,EAA0B,KAAK,CAAE,CAAEX,QAAQ,CAARA,QAAF,CAAYE,cAAc,CAAdA,cAAZ,CAAjC,UACKJ,QADL,EADJ,CAKH","sourcesContent":["import { useEffect, useState, createContext, useContext } from \"react\";\nimport axios from \"axios\";\n\nimport UserContext from \"../contexts/UserContext\";\n\nconst PokemonsContext = createContext();\nexport default PokemonsContext;\n\nexport function PokemonsProvider({ children }) {\n    const { token } = useContext(UserContext);\n    const [pokemons, setPokemons] = useState(null);\n\n    useEffect(() => {\n        updatePokemons();\n    }, [token?.token]);\n\n    function updatePokemons() {\n        axios.get(`${process.env.REACT_APP_API_BASE_URL}/pokemons`, {\n            headers: {\n                Authorization: `Bearer ${token?.token}`\n            }\n        }).then(response => {\n            setPokemons(response.data);\n        });\n    }\n\n    return (\n        <PokemonsContext.Provider value={{ pokemons, updatePokemons }}>\n            {children}\n        </PokemonsContext.Provider>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}